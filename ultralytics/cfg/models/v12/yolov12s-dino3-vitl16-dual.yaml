# YOLOv12s with DINOv3 ViT-L/16 Dual-Scale Integration - SMALL VERSION
# Channel flow follows standard YOLOv12s exactly, with DINO at P3 and P4 levels
# YOLOv12s uses width scaling = 0.5, so all channels are 0.5x standard size
# ViT-L/16 has 1024 embed_dim, properly mapped to YOLOv12s P3/P4 levels (256 channels)

nc: 80  # number of classes
scale: s  # force small scale

scales: # model compound scaling constants (from standard yolov12.yaml)
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 497 layers, 2,553,904 parameters, 2,553,888 gradients, 6.2 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 497 layers, 9,127,424 parameters, 9,127,408 gradients, 19.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 533 layers, 19,670,784 parameters, 19,670,768 gradients, 60.4 GFLOPs
  l: [1.00, 1.00, 512] # summary: 895 layers, 26,506,496 parameters, 26,506,480 gradients, 83.3 GFLOPs
  x: [1.00, 1.50, 512] # summary: 895 layers, 59,414,176 parameters, 59,414,160 gradients, 185.9 GFLOPs

backbone:
  # [from, repeats, module, args]
  # Standard YOLOv12s backbone - EXACT copy from yolov12.yaml with DINO insertion at P3 and P4
  # YOLOv12s channel progression: 3→32→64→128→128→256→256→256→512→512 (with s scaling 0.5x)
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2 (3→32 channels with s scaling)
  - [-1, 1, Conv, [128, 3, 2, 1, 2]] # 1-P2/4 (32→64 channels with s scaling)
  - [-1, 2, C3k2, [256, False, 0.25]]  # 2 (64→128 channels with s scaling)
  - [-1, 1, Conv, [256, 3, 2, 1, 4]] # 3-P3/8 (128→128 channels with s scaling)
  - [-1, 2, C3k2, [512, False, 0.25]]  # 4: Standard P3 (128→256 channels with s scaling)
  
  # DINO integration at P3 level - ViT-L/16 with 1024 embed_dim mapped to 256 channels
  - [-1, 1, DINO3Backbone, ['dinov3_vitl16', True, 256]]  # 5: DINO enhanced P3 (256→256 channels)
  
  # Continue standard YOLOv12s backbone 
  - [-1, 1, Conv, [512, 3, 2]] # 6-P4/16 (256→256 channels with s scaling)
  - [-1, 4, A2C2f, [512, True, 4]]  # 7: Standard P4 (256→256 channels with s scaling)
  
  # DINO integration at P4 level - ViT-L/16 with 1024 embed_dim mapped to 256 channels
  - [-1, 1, DINO3Backbone, ['dinov3_vitl16', True, 256]]  # 8: DINO enhanced P4 (256→256 channels)
  
  # Continue standard YOLOv12s backbone
  - [-1, 1, Conv, [1024, 3, 2]] # 9-P5/32 (256→512 channels with s scaling)
  - [-1, 4, A2C2f, [1024, True, 1]]  # 10: Standard P5 (512→512 channels with s scaling)

# Standard YOLOv12s head architecture (adjusted for dual DINO integration)
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 11 (512→512 channels)
  - [[-1, 8], 1, Concat, [1]] # 12: cat P5 + enhanced P4 (512 + 256 = 768 channels)
  - [-1, 2, A2C2f, [512, False, -1]] # 13: (768 → 256 channels with s scaling)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 14 (256→256 channels)
  - [[-1, 5], 1, Concat, [1]] # 15: cat with enhanced P3 (256 + 256 = 512 channels)
  - [-1, 2, A2C2f, [256, False, -1]] # 16: P3/8-small (512 → 128 channels with s scaling)

  - [-1, 1, Conv, [256, 3, 2]] # 17: (128 → 128 channels with s scaling)
  - [[-1, 13], 1, Concat, [1]] # 18: cat head P4 (128 + 256 = 384 channels)
  - [-1, 2, A2C2f, [512, False, -1]] # 19: P4/16-medium (384 → 256 channels with s scaling)

  - [-1, 1, Conv, [512, 3, 2]] # 20: (256 → 256 channels with s scaling)
  - [[-1, 10], 1, Concat, [1]] # 21: cat head P5 (256 + 512 = 768 channels) 
  - [-1, 2, C3k2, [1024, True]] # 22: P5/32-large (768 → 512 channels with s scaling)

  - [[16, 19, 22], 1, Detect, [nc]] # 23: Detect(P3=128, P4=256, P5=512)