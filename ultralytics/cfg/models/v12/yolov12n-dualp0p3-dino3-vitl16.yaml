# YOLOv12n with DINOv3 DualP0P3 Integration - P0 Preprocessing + P3 Backbone Enhancement
# Architecture: Input -> DINO3Preprocessor -> YOLOv12 -> DINO3(P3) -> Head
# Optimized dual enhancement targeting P0 input and P3 backbone levels

nc: 80  # number of classes
scale: n  # force nano scale

scales: # model compound scaling constants
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024]   # YOLOv12n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.50, 0.50, 1024]   # YOLOv12s summary: 225 layers, 11166560 parameters, 11166544 gradients,  29.7 GFLOPs
  m: [0.67, 0.75, 768]    # YOLOv12m summary: 295 layers, 21172000 parameters, 21171984 gradients,  48.5 GFLOPs
  l: [1.00, 1.00, 512]    # YOLOv12l summary: 365 layers, 43691520 parameters, 43691504 gradients,  86.9 GFLOPs
  x: [1.00, 1.25, 512]    # YOLOv12x summary: 365 layers, 68229648 parameters, 68229632 gradients, 135.4 GFLOPs

# P0 Preprocessing layer - DINO3 processes input before YOLOv12
preprocess:
  - [0, 1, DINO3Preprocessor, ['dinov3_vitl16', True, 3]]  # Input -> Enhanced input (3 channels)

backbone:
  # [from, repeats, module, args] - YOLOv12n backbone with DINO at P3
  # YOLOv12n channel progression with 0.25 width scaling: 3→16→32→64→64→128→128→128→256→256
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2 (3→16 channels with n scaling: 64*0.25=16)
  - [-1, 1, Conv, [128, 3, 2, 1, 2]] # 1-P2/4 (16→32 channels with n scaling: 128*0.25=32)
  - [-1, 2, C3k2, [256, False, 0.25]]  # 2 (32→64 channels with n scaling: 256*0.25=64)
  - [-1, 1, Conv, [256, 3, 2, 1, 4]] # 3-P3/8 (64→64 channels with n scaling: 256*0.25=64)
  - [-1, 2, C3k2, [512, False, 0.25]]  # 4: Standard P3 (64→128 channels with n scaling: 512*0.25=128)
  
  # DINO integration at P3 level - maintain exact same channel count for YOLOv12n
  - [-1, 1, DINO3Backbone, ['dinov3_vitl16', False, 128]]  # 5: DINO enhanced P3 (128→128 channels)
  
  # Continue standard YOLOv12n backbone 
  - [-1, 1, Conv, [512, 3, 2]] # 6-P4/16 (128→128 channels with n scaling: 512*0.25=128)
  - [-1, 4, A2C2f, [512, True, 4]]  # 7: Standard P4 (128→128 channels with n scaling: 512*0.25=128)
  - [-1, 1, Conv, [1024, 3, 2]] # 8-P5/32 (128→256 channels with n scaling: 1024*0.25=256)
  - [-1, 4, A2C2f, [1024, True, 1]]  # 9: Standard P5 (256→256 channels with n scaling: 1024*0.25=256)

# YOLOv12n head architecture (adjusted for P3 DINO integration)
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 10 (256→256 channels)
  - [[-1, 7], 1, Concat, [1]] # 11: cat P5 + P4 (256 + 128 = 384 channels)
  - [-1, 2, A2C2f, [512, False, -1]] # 12: (384 → 128 channels with n scaling: 512*0.25=128)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 13 (128→128 channels)
  - [[-1, 5], 1, Concat, [1]] # 14: cat with enhanced P3 (128 + 128 = 256 channels)
  - [-1, 2, A2C2f, [256, False, -1]] # 15: P3/8-small (256 → 64 channels with n scaling: 256*0.25=64)

  - [-1, 1, Conv, [256, 3, 2]] # 16: (64 → 64 channels with n scaling: 256*0.25=64)
  - [[-1, 12], 1, Concat, [1]] # 17: cat head P4 (64 + 128 = 192 channels)
  - [-1, 2, A2C2f, [512, False, -1]] # 18: P4/16-medium (192 → 128 channels with n scaling: 512*0.25=128)

  - [-1, 1, Conv, [512, 3, 2]] # 19: (128 → 128 channels with n scaling: 512*0.25=128)
  - [[-1, 9], 1, Concat, [1]] # 20: cat head P5 (128 + 256 = 384 channels) 
  - [-1, 2, C3k2, [1024, True]] # 21: P5/32-large (384 → 256 channels with n scaling: 1024*0.25=256)

  - [[15, 18, 21], 1, Detect, [nc]] # 22: Detect(P3=64, P4=128, P5=256)